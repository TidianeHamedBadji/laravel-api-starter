<?php

namespace {{ NAMESPACE }};

use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\JsonResource;

/**
 * Class {{ CLASS_NAME }}
 *
 * @package {{ NAMESPACE }}
 */
class {{ CLASS_NAME }} extends JsonResource
{
    /**
     * Transform the resource into an array.
     *
     * @return array<string, mixed>
     */
    public function toArray(Request $request): array
    {
        return [
            'id' => $this->id,
            'name' => $this->name,
            'description' => $this->description,
            'status' => $this->status,
            'status_label' => $this->status ? 'Active' : 'Inactive',
            'created_at' => $this->created_at?->toISOString(),
            'updated_at' => $this->updated_at?->toISOString(),
            
            // Conditionally include relationships
            $this->mergeWhen($this->relationLoaded('user'), [
                'user' => $this->whenLoaded('user')
            ]),
            
            // Include additional data when requested
            $this->mergeWhen($request->boolean('include_metadata'), [
                'metadata' => [
                    'is_new' => $this->created_at?->isToday() ?? false,
                    'days_since_created' => $this->created_at?->diffInDays(now()) ?? 0,
                ]
            ]),
        ];
    }

    /**
     * Get additional data that should be returned with the resource array.
     *
     * @return array<string, mixed>
     */
    public function with(Request $request): array
    {
        return [
            'meta' => [
                'version' => '1.0',
                'api_documentation' => url('/docs/api'),
            ],
        ];
    }

    /**
     * Customize the outgoing response for the resource.
     */
    public function withResponse(Request $request, $response): void
    {
        $response->header('X-Value-Count', 1);
    }
}